import re
import random
import pandas as pd
import re
from pyspark import SparkContext
from fileinput import input
from glob import glob
from boto.s3.connection import S3Connection
from glob import glob
def asmReduce(a, b):
    #(frequency_counter, section_length, num_subroutines, totalNumTokens)
    totalFreqDict = {}
    aKeys = set(a[0].keys())
    bKeys =set(b[0].keys())
    intersectKeys = aKeys.intersection(bKeys)
    onlyA = aKeys.difference(intersectKeys)
    onlyB = bKeys.difference(intersectKeys)
    for key in intersectKeys:
       totalFreqDict[key] = a[0][key] + b[0][key]
    for key in onlyA:
       totalFreqDict[key] = a[0][key]
    for key in onlyB:
       totalFreqDict[key] = b[0][key]
    meanDict = {}
    aKeys2 = set(a[1].keys())
    bKeys2 = set(b[1].keys())
    intersectKeys2 = aKeys2.intersection(bKeys2)
    onlyA2 = aKeys2.difference(intersectKeys2)
    onlyB2 = bKeys2.difference(intersectKeys2)
    for key in intersectKeys2:
        aVal = a[1][key]
        bVal = b[1][key]
        meanDict[key] = (aVal+bVal)/2.0
    for key in onlyA2:
        meanDict[key] = a[1][key]
    for key in onlyB2:
        meanDict[key] = b[1][key]
    avgNumSubroutines = (a[2]+b[2])/2.0
    totalNumTokens = a[3] + b[3]
    return totalFreqDict, meanDict, avgNumSubroutines, totalNumTokens

def getFolderNames(stringPrefix, pathPrefix ="", bucketName='malwaredata',
    keyID='AKIAIAYSOVUQ37QIP4OA', secretKey='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'):

    conn = S3Connection(keyID, secretKey)
    bucket = conn.get_bucket(bucketName)
    fullPrefix = pathPrefix + stringPrefix
    ACAKeys = bucket.list(prefix=fullPrefix)
    bucketNames = []
    for k in ACAKeys:
        bucketNames.append(re.match('(' + stringPrefix + '.*)\/.*', k.name).groups(0))
    bucketSet = list(set(bucketNames))
    return bucketSet

if __name__ == "__main__":
    folderNames = getFolderNames("Agg", pathPrefix="Aggregated/")
    sc = SparkContext()
    s3n1 = "s3n://AKIAJBLPYYHFYB7GJ33A:qxl+33luWGIgs50ASHNBxFKBUPEr1L2foz1dgljG@malwaredata/" + folderNames[0][0]

    baseRDD = sc.textFile(s3n1)
    remainingNames = folderNames[1:]
    for folder in remainingNames:
        S3url = "s3n://AKIAJBLPYYHFYB7GJ33A:qxl+33luWGIgs50ASHNBxFKBUPEr1L2foz1dgljG@malwaredata/" + folder[0]
        baseRDD = baseRDD.union(sc.parallelize(''.join(sorted(input(glob(S3url + "/part-0000*"))))))
    #baseRDD.reduceByKey(asmReduce).coalesce(1).saveAsTextFile("s3n://AKIAJBLPYYHFYB7GJ33A:qxl+33luWGIgs50ASHNBxFKBUPEr1L2foz1dgljG@malwaredata/Aggregated/AllAgg")
    #print len(baseRDD.take(1)[0][1])
    print baseRDD.take(1)[0]

    #baseRDD.reduceByKey(asmReduce).count()
