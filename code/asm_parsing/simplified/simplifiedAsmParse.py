import re
from pyspark import SparkContext

def textSectionParse(tup):
    fileID = tup[0]
    startTrigger = "_text"
    triggered = False
    tokens = []
    fileList = tup[1].split('\n')
    for line in fileList:
        if startTrigger in line:
            triggered = True
        if triggered:
            matchObj = re.match('\.text:[\dA-Z]+\s*(?:[A-F0-9]{2}\s)*\s*;?(.*);?', line)
            endOfSentMatch = re.match('\.text:[\dA-Z]+\s*; -+', line)
            endOfSentMatch2 = re.match('\.text:[\dA-Z]+.*; CODE XREF.*', line)
            stillInSectionMatch = re.match('\.text:.*', line)
            endOfSubroutineMatch = re.match('\.text:[\dA-Z]+\s*; [= SUBROUTINE]*', line)
            if not stillInSectionMatch:
                continue
            if not endOfSubroutineMatch and not endOfSentMatch and not endOfSentMatch2 and matchObj:
                matchTokens = matchObj.groups(1)[0].split()
                tokens.extend([((fileID, x), 1) for x in matchTokens])
    return tokens

def filenameMap(tup):
    #((u'file:/Users/codywild/Desktop/MSAN/Module3/AdvancedML/KaggleMicrosoftMalware/dataSample/0A32eTdBKayjCWhZqDOQ.asm', u'*)'), 39)
    return tup[0][0], [(tup[0][1], tup[1])]


if __name__ == "__main__":
    sc = SparkContext()
    for l in ['I', 'J', 'K', 'k', 'L', 'l', 'M', 'm', 'N', 'n', 'O', 'o', 'P', 'p', 'Q','q', 'R', 'r', 'S', 's', 'T', 't', 'U', 'u', 'V', 'v', 'W', 'w', 'X', 'x', 'Y', 'y', 'Z', 'z']:
        inFile = "s3n://AKIAJ3INZECKQLA6A5LQ:tMIqQJvGMJwJDnASoxT+TFo5Jjb2VpBaVyzPFxdh@malwaretestdata/test/" + l + "*.asm"
        outFile = "s3n://AKIAJBLPYYHFYB7GJ33A:qxl+33luWGIgs50ASHNBxFKBUPEr1L2foz1dgljG@malwaredata/test_" + l + "_simpleASM"
        sc.wholeTextFiles(inFile, 100)\
            .flatMap(textSectionParse)\
            .reduceByKey(lambda a, b: a+b)\
            .filter(lambda x: x[1] > 3)\
            .map(filenameMap)\
            .reduceByKey(lambda a, b: a + b)\
            .saveAsTextFile(outFile)

    for l in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E','F', 'G', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'H', 'I', 'J', 'K', 'L']:
        inFile = "s3n://AKIAJBLPYYHFYB7GJ33A:qxl+33luWGIgs50ASHNBxFKBUPEr1L2foz1dgljG@malwaredata/train/" + l + "*.asm"
        outFile = "s3n://AKIAJBLPYYHFYB7GJ33A:qxl+33luWGIgs50ASHNBxFKBUPEr1L2foz1dgljG@malwaredata/train_" + l + "_simpleASM"
        sc.wholeTextFiles(inFile, 100)\
            .flatMap(textSectionParse)\
            .reduceByKey(lambda a, b: a+b)\
            .filter(lambda x: x[1] > 3 )\
            .map(filenameMap)\
            .reduceByKey(lambda a, b: a + b)\
            .saveAsTextFile(outFile)