__author__ = 'David Reilly'

import boto
from boto.s3.connection import S3Connection

"""
    This script was written in order to automate the downloading of
    test and train files from S3
"""

def get_connection(access_key, secret_key):
    conn = S3Connection(access_key, secret_key)

    return conn

def list_buckets(conn):

    for bucket in conn.get_all_buckets():
        print "{name}\t{created}".format(
                name = bucket.name,
                created = bucket.creation_date,
        )

def list_bucket_items(bucket):

    for key in bucket.list():
        print "{name}\t{size}\t{modified}".format(
                name = key.name,
                size = key.size,
                modified = key.last_modified,
                )

def download_item(bucket, item_name, path):

    key = bucket.get_key(item_name)
    key.get_contents_to_filename(path)

if __name__ == '__main__':

    conn = get_connection("aws_access_key", "aws_secret_key")

    mlprojecttest = conn.get_bucket('bucket_one')
    testdata = conn.get_bucket('bucket_two')
    # keys = mlprojecttest.get_all_keys()
    rs_test = testdata.list()
    keys_test = filter(lambda x: 'file_name' in x and 'folder' not in x, [key.name for key in rs_test])
    rs_train = mlprojecttest.list()
    keys_train = filter(lambda x: 'file_name' in x and 'folder' not in x, [key.name for key in rs_train])

    for key in keys_train:
        print str(key)[-10:] + 'Train.txt'
        data = mlprojecttest.get_key(key)
        print data
        print key
        data.get_contents_to_filename('/path/to/directory/{0}'.\
            format(str(key)[-10:] + 'BiGramTrain.txt'))

    for key in keys_test:
        print str(key)[-10:] + 'Test.txt'
        data = testdata.get_key(key)
        data.get_contents_to_filename('/path/to/directory/{0}'.\
            format(str(key)[-10:] + 'BiGramTest.txt'))
